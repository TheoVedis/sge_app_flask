"""
This type stub file was generated by pyright.
"""

import abc
from future.utils import with_metaclass
from .._utils import patch_collections_abc

MutableSequence = patch_collections_abc("MutableSequence")
class ComponentRegistry:
    """Holds a registry of the namespaces used by components."""
    registry = ...
    @classmethod
    def get_resources(cls, resource_name):
        ...
    


class ComponentMeta(abc.ABCMeta):
    def __new__(mcs, name, bases, attributes):
        ...
    


def is_number(s):
    ...

class Component(with_metaclass(ComponentMeta, object)):
    class _UNDEFINED(object):
        def __repr__(self):
            ...
        
        def __str__(self) -> str:
            ...
        
    
    
    UNDEFINED = ...
    class _REQUIRED(object):
        def __repr__(self):
            ...
        
        def __str__(self) -> str:
            ...
        
    
    
    REQUIRED = ...
    def __init__(self, **kwargs) -> None:
        ...
    
    def to_plotly_json(self):
        ...
    
    def __getitem__(self, id):
        """Recursively find the element with the given ID through the tree of
        children."""
        ...
    
    def __setitem__(self, id, item):
        """Set an element by its ID."""
        ...
    
    def __delitem__(self, id):
        """Delete items by ID in the tree of children."""
        ...
    
    def __iter__(self):
        """Yield IDs in the tree of children."""
        ...
    
    def __len__(self):
        """Return the number of items in the tree."""
        ...
    
    def __repr__(self):
        ...
    


